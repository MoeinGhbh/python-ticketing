# build script for NeXR Seminar backend

image: python:3.8

pipelines:
  default:
    - parallel:
#      - step:
#          name: Test
#          caches:
#            - pip
#          script:
#            - if [ -f flask/requirements.txt ]; then pip install -r flask/requirements.txt; fi
##            - pip install pytest
##            - pytest -v tests/* --junitxml=test-reports/report.xml
      - step:
          name: Lint code
          script:
            # Enforce style consistency across Python projects https://flake8.pycqa.org/en/latest/manpage.html
            - pip install flake8
            - set +e
            - flake8 flask --extend-exclude=dist,build --show-source --statistics
            - set -e
      - step:
          name: Build and Test Docker
          script:
            - IMAGE_NAME=${BITBUCKET_REPO_SLUG}-flask
            - docker build flask --file flask/Dockerfile --tag ${IMAGE_NAME}
            - docker save ${IMAGE_NAME} --output "${IMAGE_NAME}.tar"
          services:
            - docker
          caches:
            - docker
          artifacts:
            - "*.tar"            
      - step:
          name: Lint the Dockerfile
          image: hadolint/hadolint:latest-debian
          script:
            - set +e
            - hadolint flask/Dockerfile
            - set -e
            
    - step:
          name: Push to Azure Container Registry
          deployment: Test
          trigger: manual
          script:
            - LOGIN_SERVER=vridaycontainerregistry0001.azurecr.io
            - REGISTRY_NAME=vridaycontainerregistry0001
            - echo ${AZURE_CR_PASS} | docker login $LOGIN_SERVER --username "$AZURE_CR_USER" --password-stdin
            - IMAGE_NAME=${BITBUCKET_REPO_SLUG}-flask
            - docker load --input "${IMAGE_NAME}.tar"
            - VERSION="test-0.1.${BITBUCKET_BUILD_NUMBER}"
            - IMAGE=${LOGIN_SERVER}/${REGISTRY_NAME}/${IMAGE_NAME}
            - docker tag "${IMAGE_NAME}" "${IMAGE}:${VERSION}"
            - docker push "${IMAGE}:${VERSION}"
          services:
            - docker